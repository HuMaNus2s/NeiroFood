import os
import telebot
from telebot import types
import json
import time
import sys
from datetime import datetime, timedelta
import logging
import pytz

file_for_config = open('config.json', 'r')
config = json.load(file_for_config)
prefix = config['prefix']
def command_name(number):
    return prefix + commands[number]

if not os.path.exists('logs'):
    os.makedirs('logs')

moscow_tz = pytz.timezone('Europe/Moscow')
now = datetime.now(tz=moscow_tz)
current_time = now.strftime(f"%Y-%m-%d %H:%M:%S")
log_time = now.strftime("%Y-%m-%d_%H.%M")

logger = logging.getLogger('telegram')
logger_err = logging.getLogger('err')
log_file = "logs/NeiroFoodBot_{}.log".format(log_time)
logging.basicConfig(level=logging.INFO,
                    format='[%(asctime)s][%(name)s][%(levelname)s] - %(message)s',
                    filename=log_file, # –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
                    filemode='w') # –†–µ–∂–∏–º –∑–∞–ø–∏—Å–∏/—Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞

bot = telebot.TeleBot(config['token'])
#================================================================================= –ù–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def printt(info):
    now = datetime.now(tz=moscow_tz)
    current_time = now.strftime(f"%Y-%m-%d %H:%M:%S")
    print(f"[{current_time}] - {info}")

def on_ready():
    printt(f"BOT ACTIVATED!")
    logger.info('BOT ACTIVATED!')
#================================================================================= –ó–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
def log(message=None, error=False, button=None):
    if not error and not button: # –õ–æ–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        printt(f'{message.from_user.username} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É <{message.text}>')
        logger.info(f'{message.from_user.username} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É <{message.text}>')
    elif not error and button: # –õ–æ–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏
        printt(f'{message.from_user.username} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–Ω–æ–ø–∫—É <{button}>')
        logger.info(f'{message.from_user.username} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–Ω–æ–ø–∫—É <{button}>')
    else: # –õ–æ–≥ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        printt(f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ <{message.text}>')
        logger.info(f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ <{message.text}>')
#================================================================================= –ö–æ–º–∞–Ω–¥—ã
@bot.message_handler(commands=['start'])
def handle_start(message):
    try:
        keyboard = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton("–û –Ω–∞—Å", callback_data='about')
        button2 = types.InlineKeyboardButton("FAQ", callback_data='FAQ')
        keyboard.row(button1, button2)
        photo_path = 'img/LogoNeiroFood.jpg'
        bot.send_photo(message.chat.id, photo=open(photo_path, 'rb'), caption='–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç NeiroFood!\n –ú–µ–Ω—é:', reply_markup=keyboard)
        log(message)
    except Exception as e:
        printt(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        logger.info(f'{e}')


@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.reply_to(message, f"–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n\n{command_name(0)} - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n{command_name(1)} - —Å–ø—Ä–∞–≤–∫–∞")
    log(message)
#================================================================================= –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    message = call.message
    if call.data == 'about': # –û –Ω–∞—Å
        text = '''
–ü—Ä–æ–µ–∫—Ç NeiroFood

–ü—Ä–∏–≤–µ—Ç! –ú—ã - —Å—Ç—É–¥–µ–Ω—Ç—ã, —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ–µ–∫—Ç "NeiroFood" –≤ —Ä–∞–º–∫–∞—Ö –∫—É—Ä—Å–∞ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞. –≠—Ç–æ –±—É—Ä–≥–µ—Ä–Ω–∞—è, –≥–¥–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±—É—Ä–≥–µ—Ä–æ–≤. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å! üçî‚ú®'''
        bot.send_message(message.chat.id, text)
        log(message, False, call.data)
    elif call.data == 'FAQ': # FAQ
        text = '''1. –ß—Ç–æ —Ç–∞–∫–æ–µ "NeiroFood"?
"NeiroFood" - —ç—Ç–æ –±—É—Ä–≥–µ—Ä–Ω–∞—è, —Å–æ–∑–¥–∞–Ω–Ω–∞—è —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –≤ —Ä–∞–º–∫–∞—Ö –∫—É—Ä—Å–∞ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –±—É—Ä–≥–µ—Ä–æ–≤.
2. –ö–∞–∫ —è –º–æ–≥—É –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –≤–∞—à–∏–º –º–µ–Ω—é?
–ú–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–µ. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ú–µ–Ω—é" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.
3. –ö–∞–∫ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑?
–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –±—É—Ä–≥–µ—Ä –∏–∑ –º–µ–Ω—é –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞. –ú—ã –¥–æ—Å—Ç–∞–≤–∏–º –≤–∞—à –∑–∞–∫–∞–∑ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏.
4. –ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ?
–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –æ–ø–ª–∞—Ç—É –Ω–∞–ª–∏—á–Ω—ã–º–∏ –∏ —á–µ—Ä–µ–∑ –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ –∫–∞—Ä—Ç—ã –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏.
5. –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ —Å–∫–∏–¥–∫–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤?
–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –º—ã –µ—â–µ –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –∞–∫—Ü–∏–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, –Ω–æ –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ –∏–ª–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
6. –ö–∞–∫ —è –º–æ–≥—É —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤ —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º?
–î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
7. –ö–∞–∫–∏–µ —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã —É –≤–∞—Å?
–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 9:00 –¥–æ 15:50.'''
        bot.send_message(message.chat.id, text)
        log(message, False, call.data)

#================================================================================= –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(func=lambda message: True)
def handle_text_messages(message):
    if message.text == '–ü—Ä–∏–≤–µ—Ç':
        bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!")
    else:
        send_unknown_command_message(message)

def send_unknown_command_message(message):
    bot.reply_to(message, f"–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ {command_name(1)}.")
    log(message, True)
#=================================================================================
if __name__ == '__main__':
    try:
        on_ready()
        bot.polling()
    except Exception as e:
        printt(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
        logger.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
